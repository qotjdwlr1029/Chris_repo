<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<import resource="applicationContext.xml"/>
	<!-- 가지고온 DataSource 빈 객체를 사용하여 transactionManager를 생성한다. -->
	<!-- 성공하면 모두가 성공이 되고, 하나의 기능이라도 실패하게 되면 모두 리셋이 되는 All or Nothing의 경우에 트랜젝션을 사용한다.
		 commit, rollback의 기능이 있다. -->
	<bean id="transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource"/>
			
	<!-- 물품(상품)조회 기능을 하기 위한 itemDao빈 객체를 생성하고 jdbcTemplate 빈 객체는 생성자를 통해 주입하기 위해서 constructior-arg 태그를 넣었다 -->
	<bean id="itemDao" class="chris.spring.store.dao.jdbc.JdbcItemDao">
		<constructor-arg><ref bean="jdbcTemplate"/></constructor-arg>
	</bean>
	<!-- 상품의 결제정보를 저장하는 기능을 가진 paymentInfoDao객체를 만든다. -->
	<!-- applicationContext.xml파일로 부터 가지고 온 simpleJdbcInsert, namedParameterJdbcTemplate객체를 paymentInfoDao
		 객체에 주입을 한다. -->
	<bean id="paymentInfoDao" class="chris.spring.store.dao.jdbc.JdbcPaymentInfoDao">
		<constructor-arg><ref bean="simpleJdbcInsert"/></constructor-arg>
		<property name="namedJdbcTemplate" ref="namedParameterJdbcTemplate"/>
	</bean>
	
	<!-- 상품의 주문내역을 저장하는 기능을 가진 purchaseOrderDao객체를 만든다. -->
	<!-- 위의 객체와 동일하게  simpleJdbcInsert, namedParameterJdbcTemplate객체를 주입한다. -->
	<bean id="purchaseOrderDao" class="chris.spring.store.dao.jdbc.JdbcPurchaseOrderDao">
		<constructor-arg><ref bean="simpleJdbcInsert"/></constructor-arg>
		<property name="namedJdbcTemplate" ref="namedParameterJdbcTemplate"/>
	</bean>
	<!-- TransactionTemplate을 이용한 트랜젝션 구현 -->
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate"
			p:transactionManager-ref="transactionManager"/>
		
	<bean id/>

</beans>
