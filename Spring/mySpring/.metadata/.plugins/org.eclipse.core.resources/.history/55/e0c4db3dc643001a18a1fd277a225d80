package chris.spring.web.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import chris.spring.web.board.BoardVO;
import chris.spring.web.board.impl.BoardDAO;
import chris.spring.web.user.UserVO;
import chris.spring.web.user.impl.UserDAO;

@WebServlet(name="action", urlPatterns= {"*.do"})
public class DispatcherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		processRequest(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		processRequest(request, response);
	}

	private void processRequest(HttpServletRequest request, HttpServletResponse response) throws IOException {
		//1. 클라이언트의 정보를 추출
		String uri = request.getRequestURI();					// /myBoard부터 끝까지
		String path = uri.substring(uri.lastIndexOf("/"));		// /Login.jsp를 찾아온다.
		System.out.println(path);
		//2. 클라이언트의 요성 path(명령어)에 따라 적절한 작업 분기
		if(path.equals("/login.do")) {
			System.out.println("로그인 처리");
			//1. 사용자의 입력 정보 추출
			String id= request.getParameter("id");
			String password = request.getParameter("password");
		//2. 데이터베이스 연동 처리
			UserVO vo  = new UserVO();
			vo.setId(id);
			vo.setPassword(password);
			
			UserDAO dao = new UserDAO();
			UserVO user = dao.getUser(vo);
			
		//3. 화면 네비게이션
			if(user != null){
				response.sendRedirect("getBoardList.do");
			}else{
				response.sendRedirect("login.jsp");
			}
		}else if(path.equals("/logout.do")) {
			System.out.println("로그아웃 처리");
			HttpSession session = request.getSession(false);
			session.invalidate();
			response.sendRedirect("login.jsp");
		}else if(path.equals("/insertBoard.do")) {
			System.out.println("글 등록 처리");
			//1. 사용자의 입력 정보 추출
			request.setCharacterEncoding("utf-8");
			String title = request.getParameter("title");
			String writer = request.getParameter("writer");
			String content = request.getParameter("content");
			//2. 데이터베이스 연동 처리
			BoardVO vo = new BoardVO();
			vo.setTitle(title);
			vo.setWriter(writer);
			vo.setContent(content);
			
			BoardDAO boardDao = new BoardDAO();
			boardDao.insertBoard(vo);
			//3. 화면 네비게이션
			response.sendRedirect("getBoardList.do");
			
		}else if(path.equals("/updateBoard.do")) {
			System.out.println("글 수정 처리");
			//1. 사용자의 입력 정보 추출
			request.setCharacterEncoding("utf-8");
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			String seq = request.getParameter("seq");
			//2. 데이터베이스 연동 처리
			BoardVO vo = new BoardVO();
			vo.setTitle(title);
			vo.setContent(content);
			vo.setSeq(Integer.parseInt(seq));
			
			BoardDAO boardDao = new BoardDAO();
			boardDao.updateBoard(vo);
			//3. 화면 네비게이션
			response.sendRedirect("getBoardList.do");
		}else if(path.equals("/deleteBoard.do")) {
			System.out.println("글 삭제 처리");
			//1. 사용자의 입력 정보 추출
			String seq = request.getParameter("seq");
			//2. 데이터베이스 연동 처리
			BoardVO vo = new BoardVO();
			vo.setSeq(Integer.parseInt(seq));
			
			BoardDAO boardDao = new BoardDAO();
			boardDao.deleteBoard(vo);
			//3. 화면 네비게이션
			response.sendRedirect("getBoardList.do");
		}else if(path.equals("/getBoard.do")) {
			System.out.println("글 상세 보기처리");
			//1. 사용자의 입력 정보 추출
			String seq = request.getParameter("seq");
			//2. 데이터베이스 연동 처리
			BoardVO vo = new BoardVO();
			vo.setSeq(Integer.parseInt(seq));
			BoardDAO boardDao = new BoardDAO();
			BoardVO board = boardDao.getBoard(vo);
			//3. 화면 네비게이션
			HttpSession session = request.getSession();
			session.setAttribute("board", board);
			response.sendRedirect("getBoard.jsp");
			
		}else if(path.equals("/getBoardList.do")) {
			System.out.println("글 목록 보기처리");
			//1. 사용자의 입력 정보 추출
			//2. DB 연동 처리
			BoardVO vo = new BoardVO();
			BoardDAO boardDao = new BoardDAO();
			List<BoardVO> boardList = boardDao.getBoardList(vo);
			//3. 화면 네비게이션
			HttpSession session = request.getSession();
			session.setAttribute("boardList", boardList);
			response.sendRedirect("getBoardList.jsp");
		}
	}

}
