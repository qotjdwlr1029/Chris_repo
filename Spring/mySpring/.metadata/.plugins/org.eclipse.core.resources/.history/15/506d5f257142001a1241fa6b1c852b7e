package chris.spring.store.service;

import chris.spring.store.dao.ItemDao;
import chris.spring.store.dao.PaymentInfoDao;
import chris.spring.store.dao.PurchaseOrderDao;
import chris.spring.store.vo.Item;
import chris.spring.store.vo.ItemNotFoundException;
import chris.spring.store.vo.PaymentInfo;
import chris.spring.store.vo.PurchaseOrderRequest;
import chris.spring.store.vo.PurchaseOrderResult;

public class PlaseOrderServiceImplOne implements PlaceOrderService {

	private ItemDao itemDao;
	private PaymentInfoDao paymentInfoDao;
	private PurchaseOrderDao purchaseDao;
	
	
	public void setItemDao(ItemDao itemDao) {
		this.itemDao = itemDao;
	}


	public void setPaymentInfoDao(PaymentInfoDao paymentInfoDao) {
		this.paymentInfoDao = paymentInfoDao;
	}


	public void setPurchaseDao(PurchaseOrderDao purchaseDao) {
		this.purchaseDao = purchaseDao;
	}


	@Override
	public PurchaseOrderResult order(PurchaseOrderRequest orderRequest) throws ItemNotFoundException {
		Item item = itemDao.findById(orderRequest.getItemId());
		if(item== null) {
			throw new ItemNotFoundException(orderRequest.getItemId());
		}
		PaymentInfo paymentinfo = new PaymentInfo(item.getPrice());
		paymentInfoDao.insert(paymentinfo);
	}

}
