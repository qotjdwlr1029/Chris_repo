package chris.spring.web.controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name="action",urlPatterns= {"*.do"})
//url를 *.do로 끝나는 주소로 요청을 하면 미리 name으로 매핑된 action으로 이동하고
//action은 DispatcherServlet클래스로 이동을 한다.
public class DispatcherServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private HandlerMapping handlerMapping;
	private ViewResolver viewResolver;
	public void init() throws ServletException {
		handlerMapping = new HandlerMapping();
		viewResolver = new ViewResolver();
		viewResolver.setPrefix("./");
		viewResolver.setSuffix(".jsp");
	}
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		processRequest(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		processRequest(request, response);
	}

	private void processRequest(HttpServletRequest request, HttpServletResponse response) throws IOException {
		// 1.클라이언트의 정보를 추출한다.
		String uri = request.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/"));
		// 뒤에서부터 /를 찾은후 해당 인덱스를 반환한다.
		// 그 후 그 인덱스를 포함하여 나머지 뒤를 남기고 모두 잘라낸다.
		System.out.println(path);
		
		// 2.HandlerMapping을 통해 path에 해당하는 Controller를 검색한다.
		Controller controller = HandlerMapping.
	}

}
